version: '3.9'
name: docker-web

volumes:
  db_data:
   driver: local

networks:
  app_network:
    driver: bridge

services:
  web:
    image: nginx:latest
    container_name: web
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app_network
    depends_on:
      - app

  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    image: flask-app
    ports:
      - "5000:5000"
    volumes:
      - ./app:/app
    networks:
      - app_network
    environment:
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env

  db:
    container_name: db
    image: mysql
    restart: always
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app_network
    env_file:
      - .env

  admin:
    container_name: adminer
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - "8081:80"
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: ${DB_USER}
      PMA_PASSWORD: ${DB_PASS}
    networks:
      - app_network
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env  

    